name: Build .NET Project

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-dotnet:
    name: Build .NET on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            runtime: linux-x64
            platform: Linux
          - os: windows-latest
            runtime: win-x64
            platform: Windows
          - os: macos-latest
            runtime: osx-arm64
            platform: macOS

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Display .NET info
      run: dotnet --info

    - name: Restore dependencies
      run: dotnet restore GUI/InterceptSuite/InterceptSuite.csproj

    - name: Build project
      run: dotnet build GUI/InterceptSuite/InterceptSuite.csproj --configuration Release --no-restore

    - name: Test publish (self-contained)
      run: |
        dotnet publish GUI/InterceptSuite/InterceptSuite.csproj --configuration Release --runtime ${{ matrix.runtime }} --self-contained true -p:UseAppHost=true --no-restore --verbosity normal

    - name: Verify build output
      shell: bash
      run: |
        echo "=== Build Output Verification ==="
        if [ "${{ matrix.platform }}" == "Windows" ]; then
          EXECUTABLE="GUI/InterceptSuite/bin/Release/net9.0/${{ matrix.runtime }}/publish/InterceptSuite.exe"
        else
          EXECUTABLE="GUI/InterceptSuite/bin/Release/net9.0/${{ matrix.runtime }}/publish/InterceptSuite"
        fi

        if [ -f "$EXECUTABLE" ]; then
          echo "✅ Executable found: $EXECUTABLE"
          ls -la "$EXECUTABLE"
        else
          echo "❌ Executable not found: $EXECUTABLE"
          echo "Available files in publish directory:"
          ls -la "GUI/InterceptSuite/bin/Release/net9.0/${{ matrix.runtime }}/publish/" || echo "Publish directory not found"
          exit 1
        fi

        echo "=== Published files ==="
        find "GUI/InterceptSuite/bin/Release/net9.0/${{ matrix.runtime }}/publish/" -type f | head -20

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dotnet-build-${{ matrix.platform }}-${{ matrix.runtime }}
        path: GUI/InterceptSuite/bin/Release/net9.0/${{ matrix.runtime }}/publish/
        retention-days: 7

  build-summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: build-dotnet
    if: always()

    steps:
    - name: Display build results
      run: |
        echo "=== .NET Build Summary ==="
        echo "Build status: ${{ needs.build-dotnet.result }}"
        echo ""
        if [ "${{ needs.build-dotnet.result }}" == "success" ]; then
          echo "✅ All .NET builds completed successfully!"
        else
          echo "❌ Some .NET builds failed. Check the individual job results above."
        fi
        echo ""
        echo "Platforms tested:"
        echo "  - Linux (ubuntu-latest, linux-x64)"
        echo "  - Windows (windows-latest, win-x64)"
        echo "  - macOS (macos-latest, osx-arm64)"
        echo ""
        echo "Note: This workflow only tests .NET compilation."
        echo "Native library integration is tested separately."